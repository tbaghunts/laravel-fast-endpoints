<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="EndpointConfig.php" path="/Endpoint">
    <totals>
      <lines total="70" comments="0" code="70" executable="1" executed="1" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Baghunts\LaravelFastEndpoint\Endpoint\EndpointConfig" start="27" executable="1" executed="1" crap="1">
      <namespace name="Baghunts\LaravelFastEndpoint\Endpoint"/>
      <method name="__construct" signature="__construct(array $can, array $where, ?string $path, ?string $name, array $groups, array $method, array $whereIn, array $defaults, array $throttles, array $whereUuid, array $whereUlid, array $middleware, array $whereAlpha, array $whereNumber, bool $withTrashed, ?bool $scopeBindings, array $whereAlphaNumeric, array $withoutMiddleware)" start="48" end="69" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="69">
        <covered by="Tests\Feature\Basic\DefaultsTest::test_parametersShouldBeWithDefaultValues"/>
        <covered by="Tests\Feature\Basic\DefaultsTest::test_sometimesShouldBeWithDefaultsValue"/>
        <covered by="Tests\Feature\Basic\DefaultsTest::test_botValuesShouldReturnProvidedValues"/>
        <covered by="Tests\Feature\Basic\GroupedTest::test_userPageGroupShouldBeApplied"/>
        <covered by="Tests\Feature\Basic\GroupedTest::test_numericRouteParamsGroupShouldBeApplied"/>
        <covered by="Tests\Feature\Basic\NamedRouteTest::test_routeShouldReturnValidUrlByName"/>
        <covered by="Tests\Feature\Basic\NamespacedTest::test_namespaceConfigShouldNotBeAppliedToRequestMethodsEndpoints"/>
        <covered by="Tests\Feature\Basic\NamespacedTest::test_namespaceConfigShouldBeAppliedToBasicEndpoints"/>
        <covered by="Tests\Feature\Binding\ScopeBindingsTest::test_routeShouldBeNotFoundedAsForPostBelongsToSecondsUser"/>
        <covered by="Tests\Feature\Binding\ScopeBindingsTest::test_postShouldBeFound"/>
        <covered by="Tests\Feature\Binding\WithTrashedTest::test_recordShouldBeFoundIfNotTrashed"/>
        <covered by="Tests\Feature\Binding\WithTrashedTest::test_recordShouldBeFoundIfTrashed"/>
        <covered by="Tests\Feature\Permissions\CanTest::test_regularUserShouldNotHavePermission"/>
        <covered by="Tests\Feature\Permissions\CanTest::test_regularUserShouldHavePermission"/>
        <covered by="Tests\Feature\Permissions\GuestTest::test_guestRequestShouldBeAccepted"/>
        <covered by="Tests\Feature\Permissions\GuestTest::test_guestRequestShouldNotBeAcceptedWithAuthenticatedUser"/>
        <covered by="Tests\Feature\Permissions\MiddlewareTest::test_middlewareShouldNotBeAccepted"/>
        <covered by="Tests\Feature\Permissions\MiddlewareTest::test_middlewareShouldBeAccepted"/>
        <covered by="Tests\Feature\Permissions\ThrottleTest::test_oneRequestPerMinuteShouldBeAccepted"/>
        <covered by="Tests\Feature\Permissions\ThrottleTest::test_twoRequestsPerMinuteShouldBeAccepted"/>
        <covered by="Tests\Feature\Permissions\ThrottleTest::test_thirdRequestsPerMinuteShouldNotBeAccepted"/>
        <covered by="Tests\Feature\Permissions\ThrottleTest::test_fourthAndFifthRequestAfterTimeoutShouldBeAcceptedAndSeventhShouldBeFailed"/>
        <covered by="Tests\Feature\Permissions\WithoutMiddlewareTest::test_namedRouteShouldNotBeAvailableBecauseGlobalMiddleware"/>
        <covered by="Tests\Feature\Permissions\WithoutMiddlewareTest::test_withoutMiddlewareShouldBeAvailable"/>
        <covered by="Tests\Feature\Permissions\WithoutThrottleTest::test_secondGuestRequestShouldNotBeAcceptedBecauseAllMiddlewaresUnderThrottle"/>
        <covered by="Tests\Feature\Permissions\WithoutThrottleTest::test_endpointWithWithoutMiddlewareShouldAcceptRequests"/>
        <covered by="Tests\Feature\RequestMethods\AnyTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\DeleteTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\GetTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\OptionsTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\PatchTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\PostTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\PutTest::test_execMethodTests"/>
        <covered by="Tests\Feature\RequestMethods\RouteTest::test_execMethodTests"/>
        <covered by="Tests\Feature\Validations\WhereAlphaNumericTest::test_requiredParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereAlphaNumericTest::test_sometimesParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereAlphaNumericTest::test_requiredParameterShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereAlphaNumericTest::test_bothParametersShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereInTest::test_requiredParamShouldNotBeValidated"/>
        <covered by="Tests\Feature\Validations\WhereInTest::test_sometimesParamShouldNotBeValidated"/>
        <covered by="Tests\Feature\Validations\WhereInTest::test_allParamsShouldBeValidated"/>
        <covered by="Tests\Feature\Validations\WhereNumberTest::test_requiredParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereNumberTest::test_sometimesParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereNumberTest::test_requiredParameterShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereNumberTest::test_bothParametersShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereTest::test_requiredParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereTest::test_sometimesParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereTest::test_requiredParameterShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereTest::test_bothParametersShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUlidTest::test_requiredParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUlidTest::test_sometimesParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUlidTest::test_requiredParameterShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUlidTest::test_bothParametersShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUuidTest::test_requiredParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUuidTest::test_sometimesParameterShouldNotBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUuidTest::test_requiredParameterShouldBeValid"/>
        <covered by="Tests\Feature\Validations\WhereUuidTest::test_bothParametersShouldBeValid"/>
        <covered by="Tests\Unit\Attributes\AnyTest::test_method"/>
        <covered by="Tests\Unit\Attributes\AnyTest::test_path"/>
        <covered by="Tests\Unit\Attributes\CanTest::test_defaultCase"/>
        <covered by="Tests\Unit\Attributes\CanTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\CanTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\CanTest::test_repeatableValueCase"/>
        <covered by="Tests\Unit\Attributes\DefaultsTest::test_defaultShouldBeEmptyArray"/>
        <covered by="Tests\Unit\Attributes\DefaultsTest::test_singleDefaultsCase"/>
        <covered by="Tests\Unit\Attributes\DefaultsTest::test_multipleDefaultsCase"/>
        <covered by="Tests\Unit\Attributes\DefaultsTest::test_attributeShouldBeRepeatable"/>
        <covered by="Tests\Unit\Attributes\DeleteTest::test_method"/>
        <covered by="Tests\Unit\Attributes\DeleteTest::test_path"/>
        <covered by="Tests\Unit\Attributes\GetTest::test_method"/>
        <covered by="Tests\Unit\Attributes\GetTest::test_path"/>
        <covered by="Tests\Unit\Attributes\GroupTest::test_defaultCase"/>
        <covered by="Tests\Unit\Attributes\GroupTest::test_singleCase"/>
        <covered by="Tests\Unit\Attributes\GroupTest::test_multipleCase"/>
        <covered by="Tests\Unit\Attributes\GuestTest::test_shouldAddGuestMiddleware"/>
        <covered by="Tests\Unit\Attributes\GuestTest::test_guestMiddlewareShouldBeAppendedInsteadOfOverwrite"/>
        <covered by="Tests\Unit\Attributes\MiddlewareTest::test_shouldAddSingleMiddlewareToList"/>
        <covered by="Tests\Unit\Attributes\MiddlewareTest::test_shouldAddMultiMiddlewareToList"/>
        <covered by="Tests\Unit\Attributes\NameTest::test_defaultShouldBeNull"/>
        <covered by="Tests\Unit\Attributes\NameTest::test_withSpecifiedRouteName"/>
        <covered by="Tests\Unit\Attributes\OptionsTest::test_method"/>
        <covered by="Tests\Unit\Attributes\OptionsTest::test_path"/>
        <covered by="Tests\Unit\Attributes\PatchTest::test_method"/>
        <covered by="Tests\Unit\Attributes\PatchTest::test_path"/>
        <covered by="Tests\Unit\Attributes\PostTest::test_method"/>
        <covered by="Tests\Unit\Attributes\PostTest::test_path"/>
        <covered by="Tests\Unit\Attributes\PutTest::test_method"/>
        <covered by="Tests\Unit\Attributes\PutTest::test_path"/>
        <covered by="Tests\Unit\Attributes\RouteTest::test_method"/>
        <covered by="Tests\Unit\Attributes\RouteTest::test_methods"/>
        <covered by="Tests\Unit\Attributes\ScopeBindingsTest::test_defaultShouldBeTrue"/>
        <covered by="Tests\Unit\Attributes\ScopeBindingsTest::test_booleanValues"/>
        <covered by="Tests\Unit\Attributes\ScopeBindingsTest::test_nullValue"/>
        <covered by="Tests\Unit\Attributes\ThrottleTest::test_withoutPramsCase"/>
        <covered by="Tests\Unit\Attributes\ThrottleTest::test_withRequestsParamCase"/>
        <covered by="Tests\Unit\Attributes\ThrottleTest::test_withFullParamCase"/>
        <covered by="Tests\Unit\Attributes\ThrottleTest::test_withRepeatedParamCase"/>
        <covered by="Tests\Unit\Attributes\WhereAlphaNumericTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereAlphaNumericTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereAlphaTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereAlphaTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereInTest::test_singleNameCase"/>
        <covered by="Tests\Unit\Attributes\WhereInTest::test_multipleNameCase"/>
        <covered by="Tests\Unit\Attributes\WhereNumberTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereNumberTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereTest::test_singleWhereShouldBeAddedToList"/>
        <covered by="Tests\Unit\Attributes\WhereTest::test_multipleWhereShouldBeAddedToList"/>
        <covered by="Tests\Unit\Attributes\WhereUlidTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereUlidTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereUuidTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\WhereUuidTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\WithTrashedTest::test_defaultCase"/>
        <covered by="Tests\Unit\Attributes\WithTrashedTest::test_appliedCase"/>
        <covered by="Tests\Unit\Attributes\WithoutMiddlewareTest::test_defaultCase"/>
        <covered by="Tests\Unit\Attributes\WithoutMiddlewareTest::test_singleValueCase"/>
        <covered by="Tests\Unit\Attributes\WithoutMiddlewareTest::test_multipleValueCase"/>
        <covered by="Tests\Unit\Attributes\WithoutMiddlewareTest::test_repeatableAttributeCase"/>
        <covered by="Tests\Unit\Attributes\WithoutThrottleTest::test_defaultCase"/>
        <covered by="Tests\Unit\Attributes\WithoutThrottleTest::test_withNameCase"/>
        <covered by="Tests\Unit\Attributes\WithoutThrottleTest::test_configsMergeCase"/>
        <covered by="Tests\Unit\Attributes\WithoutThrottleTest::test_repeatableCase"/>
        <covered by="Tests\Unit\Endpoint\EndpointConfigTest::test_oneGroupMergeCase"/>
        <covered by="Tests\Unit\Endpoint\EndpointConfigTest::test_multipleGroupMergeCase"/>
        <covered by="Tests\Unit\Endpoint\EndpointConfigTest::test_multipleGroupsCollectionMergeCase"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_defaultShouldBeNullableName"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_shouldBeAbilityToSetupRouteName"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_defaultShouldBeNullablePath"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_defaultShouldBeAbilityToSetupPath"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_defaultShouldBeEmptyMethods"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_singleMethodSetupShouldReturnArray"/>
        <covered by="Tests\Unit\Endpoint\MethodTest::test_shouldBeAbilityToSetupMultipleMethods"/>
        <covered by="Tests\Unit\Endpoint\MiddlewareTest::test_defaultShouldBeEmptyMiddlewares"/>
        <covered by="Tests\Unit\Endpoint\MiddlewareTest::test_shouldBeAbilityToSetupMiddlewares"/>
        <covered by="Tests\Unit\Endpoint\MiddlewareTest::test_shouldBeAbilityToInsertMiddlewareToExistList"/>
        <covered by="Tests\Unit\Endpoint\MiddlewareTest::test_shouldBeAbilityToInsertMultipleMiddlewareToExistList"/>
        <covered by="Tests\Unit\Endpoint\ScopeBindingsTest::test_defaultShouldBeNullableScoping"/>
        <covered by="Tests\Unit\Endpoint\ScopeBindingsTest::test_shouldBeAbilityToEnableScopeBinding"/>
        <covered by="Tests\Unit\Endpoint\ScopeBindingsTest::test_shouldBeAbilityToDisableScopeBinding"/>
        <covered by="Tests\Unit\Endpoint\ScopeBindingsTest::test_shouldBeAbilityToSkipScopeBinding"/>
        <covered by="Tests\Unit\Endpoint\ThrottleTest::test_defaultCase"/>
        <covered by="Tests\Unit\Endpoint\ThrottleTest::test_singleUsageCase"/>
        <covered by="Tests\Unit\Endpoint\ThrottleTest::test_multipleUsageCase"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaNumericTest::test_defaultShouldBeEmptyWhereAlphaConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaNumericTest::test_shouldBeAbilityToSetupWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaNumericTest::test_shouldBeAbilityToSetupMultipleWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaNumericTest::test_shouldBeAbilityToInsertWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaNumericTest::test_shouldBeAbilityToInsertMultipleWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaTest::test_defaultShouldBeEmptyWhereAlphaConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaTest::test_shouldBeAbilityToSetupWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaTest::test_shouldBeAbilityToSetupMultipleWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaTest::test_shouldBeAbilityToInsertWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereAlphaTest::test_shouldBeAbilityToInsertMultipleWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereNumberTest::test_defaultShouldBeEmptyWhereAlphaConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereNumberTest::test_shouldBeAbilityToSetupWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereNumberTest::test_shouldBeAbilityToSetupMultipleWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereNumberTest::test_shouldBeAbilityToInsertWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereNumberTest::test_shouldBeAbilityToInsertMultipleWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereTest::test_defaultShouldBeEmptyWhereConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereTest::test_shouldBeAbilityToSetupWhereConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereTest::test_shouldBeAbilityToInsertWhereConditionToExists"/>
        <covered by="Tests\Unit\Endpoint\WhereTest::test_shouldBeAbilityToInsertMultipleWhereConditionToExists"/>
        <covered by="Tests\Unit\Endpoint\WhereUlidTest::test_defaultShouldBeEmptyWhereAlphaConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereUlidTest::test_shouldBeAbilityToSetupWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereUlidTest::test_shouldBeAbilityToSetupMultipleWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereUlidTest::test_shouldBeAbilityToInsertWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereUlidTest::test_shouldBeAbilityToInsertMultipleWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereUuidTest::test_defaultShouldBeEmptyWhereAlphaConditions"/>
        <covered by="Tests\Unit\Endpoint\WhereUuidTest::test_shouldBeAbilityToSetupWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereUuidTest::test_shouldBeAbilityToSetupMultipleWhereAlpha"/>
        <covered by="Tests\Unit\Endpoint\WhereUuidTest::test_shouldBeAbilityToInsertWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WhereUuidTest::test_shouldBeAbilityToInsertMultipleWhereAlphaToExist"/>
        <covered by="Tests\Unit\Endpoint\WithTrashedTest::test_defaultShouldBeNullable"/>
        <covered by="Tests\Unit\Endpoint\WithTrashedTest::test_shouldBeAbilityToEnableWithTrashed"/>
        <covered by="Tests\Unit\Scanner\ScannerTest::test_endpointConfigShouldBeAppliedBySpecifiedSingleAttributes"/>
        <covered by="Tests\Unit\Scanner\ScannerTest::test_endpointConfigShouldBeAppliedBySpecifiedMultipleAttributes"/>
        <covered by="Tests\Unit\Scanner\ScannerTest::test_shouldCollectValidClassesWhichHaveCorrectSignatureWithConfigs"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Baghunts\LaravelFastEndpoint\Endpoint</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Baghunts\LaravelFastEndpoint\Contracts\EndpointConfigContract</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Baghunts\LaravelFastEndpoint\Endpoint\Traits</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="7">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Can</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Where</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Group</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Method</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WhereIn</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Throttle</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Defaults</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WhereUuid</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WhereUlid</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">Middleware</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WhereAlpha</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WhereNumber</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WithTrashed</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">ScopeBindings</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WithoutThrottle</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WithoutMiddleware</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">WhereAlphaNumeric</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">EndpointConfigMerge</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="25">
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EndpointConfig</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EndpointConfigContract</token>
      </line>
      <line no="28">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Can</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Where</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Group</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Method</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WhereIn</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Throttle</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Defaults</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WhereUuid</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WhereUlid</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WhereAlpha</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Middleware</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WithTrashed</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WhereNumber</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ScopeBindings</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WithoutThrottle</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WithoutMiddleware</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">WhereAlphaNumeric</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">EndpointConfigMerge</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$can</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$where</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE">   </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$groups</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$whereIn</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$defaults</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$throttles</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$whereUuid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$whereUlid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$middleware</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$whereAlpha</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$whereNumber</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_VARIABLE">$withTrashed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$scopeBindings</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$whereAlphaNumeric</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">     </token>
        <token name="T_VARIABLE">$withoutMiddleware</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="70">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
